body{
    background:linen;
}

.section{
    color: red;
    font-size: large;
    font-weight: Bold;
    font-family: sans-serif;
    margin-top: 10px;
    margin-bottom: 10px;
}

header{
    width: auto; /*  */     
    height: auto; 
    background-image: url(logo_background.jpg); 
}

header h1{
    color: white;
    font-family: fantasy;
    text-transform: uppercase;
    margin-left: 50px;
}
header h1.center{
    text-align: center;
    color: red;
    text-transform: lowercase;
}
header h1.large{
    font-size: 300%;
}

nav {
    background-color: BlUe;
    width: 50%;
    margin-top: 50px;
    margin-left: 400px;
    border: 5px solid black;
    padding: 20px;
    outline: 10px dotted burlywood;
}

nav a{
    color: white;
}

article{
    background:burlywood no-repeat;
    border: 5px crimson;
    margin-top: 10px;
}
article div.static{
    position: static;
    border: 3px solid black;   
}

article div.relative{
    position: relative;
    border: 3px solid black;
    left: 150px;
    width: 500px;
    height: 300px;
}

article div.absolute{
    position: absolute;
    border: 3px solid black;
    width: 200px;
    height: 200px;
    left: 200px;
    top: 80px;
}

article div.fixed{
    position: fixed;
    border: 3px solid black;
    bottom: 0;
    right: 0;
    width: 300px;
    background:blanchedalmond;
}

article div.sticky{
    position: sticky;
    border: 3px solid black;
    top: 0;
    width: 300px;
    background:blanchedalmond;
}
div.polaroid{
    width: 600px;
    box-shadow: 0 4px 8px 0 black, 0 6px 20px 0 blue;
    text-align: center;
    margin: auto;
    margin-top: 10px;
}

div.container{
    padding: 20px;
}

div.test_shadow h1{
    font-weight:bold;
    color: red;
    text-shadow: 0 0 10px  black; 
    background-color:white ;
    padding: 10px;
    border: 2px solid black;  
    box-shadow: 10px 10px 10px 0 black;
}   
.form {
    border: 3px solid green;
    padding: 1% 1%;
    width: 50%;
    margin-left: 10px;
    background-color: whitesmoke;
}

input[type=text]{
    width: 30%;
    padding: 10px;
    padding-left: 30px;
    border-color: yellow;
    margin: 10px 10px;
    color: blue;
    background-color: whitesmoke;
    box-shadow: 5px 5px 10px black, 0px 6px 5px whitesmoke;
}
input[type=text]:focus{
    border: 3p solid back;
    background-color: lightblue;
}

button{
    margin-top: 10px;
}

input[id=inputname]{
    background-image: url('profile-user.png');
    background-size: 15px 15px;
    background-position: 10px 10px;
    background-repeat: no-repeat;
}
.pseudo p::first-line{
    color: red;
    font-size: large;
}

.flex-container{
    display: flex;
    flex-direction: row-reverse; /*điều chỉnh hướng của các items*/
    justify-content: center; /*căn chỉnh cho các items */
    flex-wrap: wrap; /*cho các flex-items quấn quanh trục flex-align*/
    background-color: aquamarine;
    margin-top: 20px;
}

.flex-container > div {
    background-color: #f1f1f1;
    border: 2px solid black;
    width: 100px;
    margin: 10px;
    text-align: center;
    line-height: 75px;
    font-size: 30px;
}

.grid-container{
    display: grid;
    grid-template-columns: auto auto auto;
    grid-gap: 40px;
    background-color: aquamarine;
    margin-top: 20px;
}

.grid-container > div{
    background-color: #f1f1f1;
    border: 2px solid black;

    margin: 10px;
    text-align: center;
    line-height: 75px;
    font-size: 30px;
}

.grid-item1{ /*item sẽ bắt đầu ở cột 1 tới cột 3*/
    grid-column-start: 1;
    grid-column-end: 4;
}

.grid-item2{
    grid-column: 4 / span 2; /*item bắt đầu ở cột 4 và lấy 2 cột từ cột số 4*/
}

.grid-item3{ /*item sẽ bắt đầu ở dòng 2 tới dòng 5*/
    grid-row-start: 2;
    grid-row-end: 4;
}

.grid-item13{
    grid-row: 3 / span 2;
    grid-column: 5 / span 1;
}

.grid-item18{
    grid-area: 5 / 3 / span 1 / span 3; /*dòng start / cột start / dòng end / cột end*/
}

.grid-container2{
    display: grid;
    grid-template-areas:
    'header header header header header header'
    'menu main main main right right'
    'menu footer footer footer footer footer';
    grid-gap: 40px;
    background-color: aquamarine;
    margin-top: 20px;
}

.grid-container2 > div {
    background-color: #f1f1f1;
    border: 2px solid black;
    margin: 10px;
    text-align: center;
    line-height: 75px;
    font-size: 30px;
}
 
/* Cái này để tạo items cho class grid-container 2 */
.item1 { grid-area: header; }
.item2 { grid-area: menu; }
.item3 { grid-area: main; }
.item4 { grid-area: right; }
.item5 { grid-area: footer; }

/* tạo animation */

.animation1{
    width: 300px;
    height: 300px;
    margin-bottom: 250px;
    background-image: url(page_background.jpg);
    background-size: auto;
    position: relative; /* phải có position để animation có thể di chuyển được trong khu vực chỉ định*/
    animation-name: movingpicture1;
    animation-duration: 4s;
    animation-iteration-count: infinite;
}

@keyframes movingpicture1 {
    0%   {left:0px; top:0px;}
    25%  {left:200px; top:0px;}
    50%  {left:200px; top:200px;}
    75%  {left:0px; top:200px;}
    100% {left:0px; top:0px;}
}

.animation2 > div{
    width: 100px;
    height: 50px;
    margin-bottom: 5px;
    border: 2px black solid;
    background-color: lightblue;
    color: red;
    position: relative;
    animation: movingpicture2 10s infinite;
}

#anima1 {animation-timing-function: linear;} /*bắt đầu chậm, rồi nhanh, rồi chậm */
#anima2 {animation-timing-function: ease;} /* bắt đầu kết thúc cùng 1 nhịp*/
#anima3 {animation-timing-function: ease-in;} /* bắt đầu chậm*/
#anima4 {animation-timing-function: ease-out;} /*kết thúc chậm*/
#anima5 {animation-timing-function: ease-in-out;} /*bắt đầu chậm và kết thúc chậm*/

@keyframes movingpicture2{
    0% {background-color: lightblue;color: black; ;left: 0px;}
    100% {background-color: black; color:white; left: 600px;}
}

/*tạo transition*/

.transition > div{
    width: 100px;
    height: 50px;
    margin-bottom: 5px;
    padding-top: 25px;
    padding-left: 10px;
    border: 2px black solid;
    background-color: lightblue;
    color: red;
    transition: width 2s;
}

.transition > div:hover{
    width:600px
}

#trans1 {transition-timing-function: linear;}
#trans2 {transition-timing-function: ease;}
#trans3 {transition-timing-function: ease-in;}
#trans4 {transition-timing-function: ease-out;}
#trans5 {transition-timing-function: ease-in-out;}

/*tạo transformation*/

.transformation{
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
    
}
.transformation-container{
    width: 500px;
    height: 300px;
    border: 2px solid green;
    background-color: lightblue;
    margin: 5px;
}

.transformation-textbox{
    width: 300px;
    height: 100px;
    border: 2px solid black;
    background-color: yellow;
    padding-left: 10px;
}

#translate2{
    transform: translate(40px,-60px);
}

#rotate2{
    transform: rotate(15deg);
}

.scale{
    transform: scale(1.25,1.25); /*nhân theo tỉ lệ (x,y)*/
    margin-left: 100px;
}

.skew{
    transform: skew(30deg,20deg); /*kéo theo góc (x,y)*/
}

.matrix{
    transform: matrix(1, -0.3, 0, 1, 0, 0); /*syntax matrix(scaleX(),skewY(),skewX(),scaleY(),translateX(),translateY())*/
}
.matrix2{
    transform: matrix(1, 0, 0.5, 1, 150, 0);
}